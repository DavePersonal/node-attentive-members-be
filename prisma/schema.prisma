model agencies {
  id                  Int                   @id @default(autoincrement())
  agency_name         String?               @db.VarChar
  agencies            String?               @db.VarChar
  head_broker_id      String?               @db.VarChar
  brokers_to_agencies brokers_to_agencies[]
}

model brokers_to_agencies {
  id             Int      @id @default(autoincrement())
  broker_id      Int?     @db.Integer
  agency_id      Int?     @db.Integer
  is_head_broker Boolean? @db.Boolean
  brokers brokers? @relation(fields: [broker_id], references: [id])
  agencies agencies?  @relation(fields: [agency_id], references: [id])
}

model brokers {
  id           Int     @id @default(autoincrement())
  broker_name  String? @db.VarChar
  first_name   String? @db.VarChar
  last_name    String? @db.VarChar
  phone_mobile String? @db.VarChar
  email        String? @db.VarChar
  clients_to_brokers  clients_to_brokers[]
  brokers_to_agencies brokers_to_agencies[]
}

model clients {
  id                         Int       @id @default(autoincrement())
  acct_num                   String?   @db.VarChar
  client_status              String?   @db.VarChar
  effective_date             DateTime? @db.Date
  orig_renewal               DateTime? @db.Date
  term_date                  DateTime? @db.Date
  fee_date                   DateTime? @map("129_fee_date") @db.Date
  premium                    Decimal?  @db.Decimal
  employer_fee               Decimal?  @db.Decimal
  employee_fee               Decimal?  @db.Decimal
  total_fee                  Decimal?  @db.Decimal
  payment_terms_days         Decimal?  @db.Decimal
  payment_method             String?
  client_name                String?   @db.VarChar
  lives                      Decimal?  @db.Decimal
  primary_contact            String?   @db.VarChar
  payroll_contact            String?   @db.VarChar
  payroll_contact_email      String?   @db.VarChar
  agency                     String?   @db.VarChar
  payroll_system             String?   @db.VarChar
  first_payroll_process_date String?   @db.VarChar
  initial_payroll_pay_date   DateTime? @db.Date
  payroll_frequency          String?   @db.VarChar
  deduction_freq             Decimal?  @db.Decimal
  billing_freq               Decimal?  @db.Decimal
  account_manager_id         Int?
  payroll_specialist_id      Int?

  clients_to_brokers clients_to_brokers[] // Establish relationship with join table
}

model clients_to_brokers {
  id                   Int       @id @default(autoincrement())
  client_id            Int
  broker_id            Int
  is_primary           Boolean?
  relationship_type    String?
  commission_rate_pepm Decimal?  @db.Decimal
  broker_permissions   String?
  effective_date       DateTime? @db.Date
  modified_date        DateTime? @db.Date
  modified_by          String?
  comment              String?

  client clients @relation(fields: [client_id], references: [id])
  broker brokers @relation(fields: [broker_id], references: [id])

  @@index([client_id])
  @@index([broker_id])
}

model clients_to_brokers_external {
  client_id            Int?
  broker_id            Int?
  is_primary           Boolean?
  relationship_type    String?
  commission_rate_pepm Decimal?  @db.Decimal
  broker_permissions   String?
  effective_date       DateTime? @db.Date
  modified_date        DateTime? @db.Date
  modified_by          String?
  id                   Int       @id @default(autoincrement())
  comment              String?
  broker_name          String?
}

model invoices_draft {
  id                 Int       @id @default(autoincrement())
  client_name        String?
  invoice_date       DateTime? @db.Date
  payment_terms_days Int?
  payment_method     String?
  invoice_num        String?
  service_month      String?
  first_name         String?
  last_name          String?
  employer_fee       Decimal?  @db.Decimal
  employee_fee       Decimal?  @db.Decimal
  total_fee          Decimal?  @db.Decimal
  client_id          Int?
}

model invoices_final {
  client_name        String?   @db.VarChar
  invoice_date       DateTime? @db.Date
  payment_terms_days Decimal?  @db.Decimal
  payment_method     String?
  invoice_num        String?
  service_month      String?
  first_name         String?
  last_name          String?
  employer_fee       Decimal?  @db.Decimal
  employee_fee       Decimal?  @db.Decimal
  total_fee          Decimal?  @db.Decimal
  id                 Int       @id @default(autoincrement())
  comment            String?
  client_id          Int?
}

model members {
  member_id          String?   @db.VarChar
  member_status      String?   @db.VarChar
  date_of_hire       DateTime? @db.Date
  effective_date     DateTime? @db.Date
  termination_date   DateTime? @db.Date
  loa_date           DateTime? @db.Date
  reinstatement_date DateTime? @db.Date
  first_name         String?   @db.VarChar
  last_name          String?   @db.VarChar
  ssn                String?   @db.VarChar
  date_of_birth      DateTime? @db.Date
  gender             String?
  phone_num          String?   @db.VarChar
  other_phone        String?   @db.VarChar
  email              String?   @db.VarChar
  address_line1      String?   @db.VarChar
  address_line2      String?   @db.VarChar
  city               String?   @db.VarChar
  state              String?   @db.VarChar
  zip_code           String?   @db.VarChar
  sequence_num       String?   @db.VarChar
  dependent_type     String?
  coverage_code      String?
  client_name        String?   @db.VarChar
  billing_freq       Decimal?  @db.Decimal
  deduction_freq     Decimal?  @db.Decimal
  meta_created_date  DateTime? @db.Timestamptz(6)
  meta_modified_date DateTime? @db.Timestamptz(6)
  id                 Int       @id(map: "members_august2_pkey") @default(autoincrement())
  client_id          Int?
  dependent_of       String?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model client_onboarding_workflow {
  acct_num                   String?   @db.VarChar
  client_status              String?   @db.VarChar
  client_name                String?   @db.VarChar
  payroll_specialist_intro   String?   @db.VarChar
  census_call                String?   @db.VarChar
  docs_sent                  String?   @db.VarChar
  docs_received              String?   @db.VarChar
  client_approved_ldb        String?   @db.VarChar
  client_in_ldb              String?   @db.VarChar
  case_profile_form          String?   @db.VarChar
  cpf_shared_with_erisa_atty String?   @db.VarChar
  msa                        String?   @db.VarChar
  ach                        String?   @db.VarChar
  welcome_call               String?   @db.VarChar
  payroll_line_items         String?   @db.VarChar
  ee_understandings          String?   @db.VarChar
  participation_summary      String?   @db.VarChar
  payroll_deduction_summary  String?   @db.VarChar
  client_enters_deductions   String?   @db.VarChar
  mock_payroll_review        String?   @db.VarChar
  members_approved_ldb       String?   @db.VarChar
  modified_by                String?   @db.VarChar
  modified_date              DateTime? @db.Timestamp(6)

  @@ignore
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
